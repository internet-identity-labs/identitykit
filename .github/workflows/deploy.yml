name: Deploy

on:
  workflow_dispatch:
    inputs:
      network_name:
        description: 'Choose applicable network'
        required: true
        type: choice
        options:
          - dev
          - ic
      confirmation:
        description: 'For the ic deployment - confirm your choice by typing "Yes"'
        type: string

env:
  NETWORK_NAME: ${{ github.event.inputs.network_name }}

jobs:
  deploy:
    name: Build and Deploy
    timeout-minutes: 15
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.network }}
    steps:
      - name: INPUT => Checks network
        if: (github.event.inputs.network_name == 'ic') && (github.event.inputs.confirmation != 'Yes')
        run: |
          echo "[ERROR] You have try to deploy to 'ic' without or with wrong confirmation phrase" >&2
          exit 1

      - name: Check out code
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Setup DFX
        uses: dfinity/setup-dfx@main
        with:
          dfx-version: 0.15.3

      - name: Install dependencies
        run: npm install --frozen-lockfile

      - name: Build
        run: npm run build-playground:"${NETWORK_NAME}"

      - name: Setup DFX Identity
        run: |
          ID_NAME="dfx-identity"
          ID_PATH="$HOME/.config/dfx/identity/${ID_NAME}"
          mkdir -p "${ID_PATH}"
          echo "${IDENTITY}" | base64 -d > "${ID_PATH}/identity.pem"
          dfx identity use "${ID_NAME}"
        env:
          IDENTITY: ${{ secrets.DFX_IDENTITY }}

      - name: Deploy
        run: |
          echo "dfx deploy signer --network "${NETWORK_NAME}"" >&2
          if ! result=$(dfx deploy signer --yes --network "${NETWORK_NAME}"); then
            echo "Deploy failed ${result}" >&2
            exit 1
          fi

          echo "dfx deploy dapp --network "${NETWORK_NAME}"" >&2
          if ! result=$(dfx deploy dapp --yes --network "${NETWORK_NAME}"); then
            echo "Deploy failed ${result}" >&2
            exit 1
          fi

          echo "dfx deploy demo --network "${NETWORK_NAME}"" >&2
          if ! result=$(dfx deploy demo --yes --network "${NETWORK_NAME}"); then
            echo "Deploy failed ${result}" >&2
            exit 1
          fi
